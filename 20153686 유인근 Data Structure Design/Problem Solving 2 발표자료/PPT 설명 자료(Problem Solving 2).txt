< 슬라이드 1 >

안녕하세요.
오늘 "Problem Solving"에 대한 발표를 진행할 유인근입니다.

--------------------------

< 슬라이드 2 >

그러면 먼저, 제가 발표할 내용의 목차에 대해 말씀드리겠습니다.
첫 번째로, 제가 진행할 프로젝트의 주제가 무엇인지 다시 말씀드리고
두 번째로, 구현하고자 하는 프로그램의 구체화된 모델에 대해 말씀드리고
세 번째로, 프로그램 실행 과정과 문제들을 어떻게 해결하지 그 계획을 말씀드리겠습니다.
그리고 마지막에는 질문을 받도록 하겠습니다.

--------------------------

< 슬라이드 3 >

네, 제가 선정한 주제는 "가장 저렴한 기름값으로, 장거리 자동차 여행하기" 입니다. 
여기서 'Road Trip'은 의미상 지은 이름이고, 
핵심은 우리 나라에 있는 다른 지역을 자동차로 고속도로를 경유하면서 이동합니다.
이때 이동 기간 동안 기름값이 가장 적게 들 수 있는 고속도로 주유소를 안내해주는 프로그램입니다.
간단한 예시 두 가지 보여드리겠습니다.

--------------------------

<슬라이드 4>

ex1) 다음과 같이 "서울"에서 "부산"으로 가는 "경부고속도로" 상에, A / B / C / D 네 개의 주유소만 있다고 가정해보겠습니다. 
이때 자동차에 기름이 A B C D 네 개의 주유소에 모두 도달할 수 있을만큼 기름이 충분히 있다면, A B C D 중 가장 저렴한 주유소인 C만을 안내합니다.

--------------------------

< 슬라이드 5 >

ex2) 두 번째도 비슷한 상황이지만 이때 자동차에 기름이 A B 두 개의 주유소에만 도달할 수 있을만큼 기름이 있다면,
A B 중 가장 저렴한 주유소 A를 안내하고, A 주유소에서 C에 도달할 수 있을만큼만 기름을 넣도록 기름의 양을 안내합니다.
이렇게 하면, A에서 모두 기름을 넣을 때보다 A, C 두 곳을 들러 기름을 넣는 것이 L당 50원가량 절약될 수 있는 것입니다.
이 부분에 대한 슈도(pseudocode)코드는 뒤에 Problem Solving 부분에서 설명드리겠습니다.

--------------------------

< 슬라이드 6 >

다음은 관련 데이터를 말씀드리겠습니다.
한국석유공사에서 운영하는 Opinet 이라는 사이트를 들어가면, 일자별로 전국의 주유소의 가격이 텍스트 혹은 엑셀 형태로 제공됩니다.

--------------------------

< 슬라이드 7 >

약 11,500개의 전국 주유소의 정보가 제공되고, 제가 고속도로에 있는 주유소만을 따로 필터링 했을 때 
상행선 하행선 포함해서 약 120여개의 고속도로 주유소가 제공됩니다.
이 데이터를 토대로 프로젝트를 진행하려고 합니다.

--------------------------

< 슬라이드 8 >

다음으로 구체화된 모델을 말씀드리겠습니다.
Node는 고속도로 상에 있는 주유소와 도시이고,
Edge 고속도로 길
Weight는 2개인데, Node(주유소)의 기름값 Weight_1, 넣는 기름의 양 Weight_2 입니다.
이때 이 주제가 Dynamic한 Graph인 이유는
고속도로 상에 있는 각각의 주유소를 모두 연결하면 Graph 형태로 표현되고,
주유소의 기름값은 하루마다 갱신되기 때문에 Weight_1의 값은 하루 단위로 바뀌고 
Weight_2의 값도 차종에 따른 연비에 따라 또한 Weight_1의 값에 따라 계속 바뀌기 때문에 Dynamic한 Graph로 표현할 수 있다고 생각했습니다.
그런데, 제가 데이터를 살펴봤을 때 한 주유소에서 기름값이 변화하는 폭이 크지 않고 기름값이 오르거나 내리는 시기가 대부분의 주유소가 비슷했습니다.
하지만 기간에 따라서 다른 주유소의 기름값이 변하는데 반해, 기름값이 거의 일정한 주유소들도 있고,
그리고 기간이 길다면 기름값이 변하는 폭이 점점 커지는 것을 알 수 있었습니다.
그래서 여행 기간이 길수록 더욱 의미 있는 값을 측정할 수 있다고 생각했습니다.

--------------------------

< 슬라이드 9 >

다음은 측정가능한 의미 있는 정보들입니다.
첫째로 가장 저렴한 기름값을 측정할 수 있고
둘째로 주변 경쟁 주유소들 간의 관계와 영향을 알 수 있습니다.
그리고 기름값이 가장 저렴한 주유소에는 가장 많은 사람이 이용할 가능성이 높으므로, 어떤 중심적인 역할을 하는 주유소의 정보도 알 수 있습니다.

--------------------------

< 슬라이드 10 >

네 다음은 프로젝트를 진행하기 위한 전제조건을 말씀드리겠습니다.
첫번째로, 이동 시 가장 짧은 거리를 통해 이동한다는 가정을 위해 고속도로만을 이용한다는 전제입니다. 
두번째로, 주유소 역시 고속도로 상에 있는 주유소만을 이용합니다. 고속도로를 벗어난 지역은 Data가 너무 많아 고려하기 힘들기 때문입니다.
세 번째로, 각 방문 지역에서 소비되는 시간이 계산 불가하므로 사용자가 입력한 대로만 프로그램을 수행합니다.
가령 첫째날에 서울 -> 대전 -> 대구 -> 부산 -> 창원 - > 울산 등등 다양한 도시들을 입력할 시
현실적으로 하루 동안에 다 돌아다니기 힘든 코스지만, 실제 이동 시간이 24시간이 넘든 넘지 않든 이를 따로 고려하지 않고 사용자가 입력한 대로만 프로그램을 수행한다는 뜻입니다.

------------------------

< 슬라이드 11 >
 
네 다음은 후에 전제조건들이 될 고려사항 몇 가지를 말씀드리겠습니다.
첫 번째로 방문 도시는 몇 개까지 구현할 지를 결정해야 하고
두 번째로 차종에 따라 기름의 종류 연비가 다른데 이를 어디까지 세분화해서 구현할 지 결정해야 합니다.
그리고 처음 출발할 때의 기름의 양을 결정해야 하고
방문 지역에 도착하자마자 기름을 다써서 차가 멈추면 안되니까
방문 지역에서도 어느 정도의 기름이 필요하므로 어떤 지역에 도착했을 시점에 기름을 얼마나 남길지도 결정해야 합니다.

------------------------

< 슬라이드 12 >

네 마지막으로 문제를 어떻게 해결하고, 실행 과정이 어떻게 될 건지에 대해 간단히 말씀드리겠습니다.
일단은, JAVA로 프로그램을 구현할 것이고 
두 번째로 고속도로에서 이동하는 방향이 두 가지로 정해져있으니까 양방향 그래프를 사용할 것이고,
지금까지 제가 데이터를 봤을 때 상행선과 하행선의 각각의 동일한 지점마다 주유소의 가격이 거의 비슷하고 가끔 1원씩 차이가 나서,
상행선과 하행선의 같은 지점의 주유소를 구별해서 두지 않아도 상관없을 것 같습니다.
사실 아직 데이터 확인이 더 필요하고 그래프에 대해 공부 중에 있어서 고민 중에 있습니다.
네 그리고 아무래도 Node의 개수가 많다보니까 인접 리스트 형태로 그래프를 구현할 것이고,
각 Node에 "주유소의 기름값"과 "주유할 기름의 양" 이 두 가지의 Weight를 부여해 구현하고자 합니다.

------------------------

< 슬라이드 13 >

다음은 실행 과정입니다.
첫 째로 사용자로부터 여행하고자 하는 여러 지역을 일자별로 선택받습니다.
예를 들어, 사용자가 다음과 같이 입력했습니다.
기간은 3박 4일
그리고 도시는 대도시 위주로 선택을 했습니다.

------------------------

< 슬라이드 14 >

그러면 프로그램은 일자별로 이동 고속도로를 안내하고, 고속도로 동선상에 있는 주유소를 검색해
기름값, 그리고 넣어야 하는 기름의 양을 계산해서
여행 기간 동안 가장 저렴하게 기름값을 지불할 수 있는 주유소의 경로, 기름값, 기름의 양을 안내합니다.
마지막으로 여행 기간 동안에 가장 저렴한 기름값으로 총 얼마가 나왔고, 가장 비싼 기름값 혹은 평균적인 기름값과 비교해서 얼마나 차이 났는지를 보여줍니다.

------------------------

< 슬라이드 15 >

다음으로, Output의 기능을 구현하기 위해 각종 문제들을 어떻게 해결할지 말씀드리겠습니다.
(도시 입력 시, 이용해야 하는 고속도로 안내는 어떻게 할 지 고민중...)
먼저, 사용자가 도시 입력 시 이동하는 고속도로의 거리를 계산하기 위해 좌표를 사용할 예정입니다. 
각 Node에 좌표값을 부여해 도시 간의 거리와, 주유소 간의 거리를 계산할 수 있기 때문입니다.
그러면 이 거리값을 토대로, 이동에 따라 자동차에서 소모되는 기름의 양도 계산할 수 있습니다.
또한, 도시와 도시 사이에 있는 주유소를 따로 추출할 수 있습니다.
가령, 사용자가 서울에서 대전을 가겠다고 입력한다면 x좌표가 0과 8사이에 있는 주유소인 A, B, C 순서대로 추출하는 것입니다.
반대로 대전에서 서울을 가겠다고 입력한다면, x좌표가 똑같이 0과 8사이에 있는 주유소를 추출하지만 x좌표의 값이 큰 순서대로
즉, 내림차순대로 주유소가 C B A 이렇게 안내될 것입니다.

------------------------

< 슬라이드 16 >

다음으로, 현재의 기름양으로 갈 수 있는 최저가 주유소를 가기 위한 준비 코드를 보여드리겠습니다.
첫째날은 기름이 가득 찬 상태로 출발한다고 가정했고, 여행이 끝나는 시점에 남아 있어야 하는 기름의 양은 고려하지 않은 코드입니다.

------------------------

< 슬라이드 17 >

네 제가 준비한 발표는 여기까지고, 마지막으로 질문 받도록 하겠습니다
 
------------------------

< 슬라이드 18 >

(그림 자료 및 출저)