< 슬라이드 1 >

안녕하세요.
오늘 "Implementation & Data Collection"에 대한 발표를 진행할 유인근입니다.

--------------------------

< 슬라이드 2 >

그러면 먼저, 제가 발표할 내용의 목차에 대해 말씀드리겠습니다.
첫 번째로, 제가 진행할 프로젝트의 주제가 무엇인지 다시 말씀드리고,
두 번째로, 제가 이때까지 구현한 결과물과 자료 수집을 어디서 어떻게 했는지 말씀드리고,
세 번째로, Use Case와 앞으로 남은 문제들을 어떻게 해결할 지에 대해 말씀드리겠습니다.

--------------------------

< 슬라이드 4 >

네, 제가 선정한 주제는 "가장 저렴한 기름값으로, 장거리 자동차 여행하기" 입니다. 
여기서 'Road Trip'은 의미상 지은 이름이고, 
핵심은 우리 나라에 있는 여러 도시를 자동차로 고속도로를 경유하면서 이동합니다.
이때 이동 기간 동안 기름값이 가장 적게 들 수 있는 고속도로 주유소를 안내해주는 프로그램입니다.
간단한 예시 두 가지 보여드리겠습니다.

--------------------------

< 슬라이드 5 >

ex1) 다음과 같이 "서울"에서 "부산"으로 가는 "경부고속도로" 상에, A / B / C / D 네 개의 주유소만 있다고 가정해보겠습니다. 
이때 자동차에 기름이 A B C D 네 개의 주유소에 모두 도달할 수 있을만큼 기름이 충분히 있다면, A B C D 중 가장 저렴한 주유소인 C만을 안내합니다.

--------------------------

< 슬라이드 6 >

ex2) 두 번째도 비슷한 상황이지만 이때 자동차에 기름이 A / B 두 개의 주유소에만 도달할 수 있을만큼 기름이 있다면,
A / B 중 가장 저렴한 주유소 A를 안내하고, A 주유소에서 C에 도달할 수 있을만큼만 기름을 넣도록 기름의 양을 안내합니다.
이렇게 하면, A에서 모두 기름을 넣을 때보다 A, C 두 곳을 들러 기름을 넣는 것이 L당 50원가량 절약될 수 있는 것입니다.

--------------------------

< 슬라이드 7 >

다음으로 구체화된 모델을 간단히 말씀드리겠습니다.
Vertex는 고속도로 상에 있는 주유소와 도시(도시는 weight가 없는 vertex)이고,
Edge 고속도로 길(weight로 distance 부여할지는 고민중) 
Weight는 2개인데, Vertex(주유소)의 기름값 Weight_1, 넣는 기름의 양 Weight_2 입니다.
이때 이 주제가 Dynamic한 Graph인 이유는
고속도로 상에 있는 각각의 주유소를 모두 연결하면 Graph 형태로 표현되고,
주유소의 기름값은 하루마다 갱신되기 때문에 Weight_1의 값은 하루 단위로 바뀌고 
Weight_2의 값도 차종에 따른 연비에 따라 또한 Weight_1의 값에 따라 계속 바뀌기 때문에 Dynamic한 Graph로 표현할 수 있다고 생각했습니다.

(추가 설명)

그런데, 제가 데이터를 살펴봤을 때 한 주유소에서 기름값이 변화하는 폭이 크지 않고 
기름값이 오르거나 내리는 시기가 대부분의 주유소가 비슷했습니다.
하지만 기간에 따라서 다른 주유소의 기름값이 변하는데 반해, 기름값이 거의 일정한 주유소들도 있고,
그리고 기간이 길다면 기름값이 변하는 폭이 점점 커지는 것을 알 수 있었습니다.
그래서 여행 기간이 길수록 더욱 의미 있는 값을 측정할 수 있다고 생각했습니다.

--------------------------

< 슬라이드 9 >

다음으로 Implementation 그리고 Data Collection 부분을 말씀드리면 일단은, JAVA로 프로그램을 구현할 것이고 
두 번째로 고속도로에서 이동하는 방향이 두 가지로 정해져있으니까 양방향 그래프를 사용할 것이고,
지금까지 제가 데이터를 봤을 때 상행선과 하행선의 각각의 동일한 지점마다 주유소의 가격이 거의 비슷하고 가끔 1원씩 차이가 나서,
상행선과 하행선의 같은 지점의 주유소를 구별해서 두지 않아도 상관없을 것 같습니다.
사실 아직 데이터 확인이 더 필요해서 고민 중에 있습니다.
네 그리고 아무래도 vertex의 개수가 많다보니까 인접 리스트 형태로 그래프를 구현할 것이고,
각 vertex에 "주유소의 기름값"과 "주유할 기름의 양" 이 두 가지의 Weight를 부여해 구현하고자 합니다.

--------------------------

< 슬라이드 10 >

다음은 제가 이때까지 구현한 프로젝트의 Class Diagram인데,
도시를 입력받았을 때, 그 도시와 도시 사이에 있는 주유소를 탐색하고, 도달할 수 있는 주유소 중의 최저가 주유소와 그 기름값을 계산해내는
Algorithm을 짜는 중에 있어서 Class나 변수, method 등이 더 추가될 예정입니다.

------------------------

< 슬라이드 11 ~14 >
 
슬라이드 11 : 네 다음은, 주유소 vertex 생성을 구현한 화면이고요. 제가 2018년 9월 1일 ~ 2018년 10월 1일 까지의 데이터를 검색한 결과
                 125개의 vertex가 생성되었습니다.

슬라이드 12 : 다음은 사용자가 원하는 날짜를 입력했을 때, 그 날짜에 해당하는 vertex와 vertex의 weight 값인 기름값을 출력한 화면입니다.

슬라이드 13 : 그리고 다음과 같이 기름값이 0으로 나타나는 vertex는 weight 정보가 없는 즉, 기름값 정보가 없는 vertex 인데요.

슬라이드 14 : 사용자가 처음에 9월 5일 날짜를 입력했는데, 다음과 같이 "대보유통(주)지리산고서주유소"에 대해서는 
                 9월 5일에 해당하는 데이터가 없어 0으로 표시되게 코드를 작성했습니다. 
                 그래서 이렇게 가끔 기름값의 정보가 없는 데이터에 대해서는 최저가 주유소를 찾는 알고리즘 상에서 제외할 예정입니다.
                 (데이터가 없는 그 날짜에 대해서만 제외한다는 의미, 다른 날짜에 정보가 있으면 사용)
                 9월 1일 ~  10월 1일 데이터를 살펴본 결과 1달 동안의 데이터가 모두 있는 vertex는 123개
                 방금 예시처럼 가끔 특정한 날짜에 대해 데이터가 없는 vertex는 2개였습니다. (데이터 누락으로 프로젝트에 영향을 줄 것 같진 않습니다)

------------------------

< 슬라이드 15, 16 >

데이터는 한국석유공사에서 운영하는 Opinet이라는 사이트에 들어가면 있고, ( http://www.opinet.co.kr/user/main/main_download.do )
최대 1달 단위로 텍스트 혹은 엑셀 형태로 파일이 다운이 됩니다.

------------------------

< 슬라이드 18 >

다음은 실행 과정 예시입니다.
첫째로 사용자로부터 여행하고자 하는 여러 지역을 일자별로 선택받습니다.
예를 들어, 사용자가 다음과 같이 입력했습니다.
기간은 3박 4일
그리고 도시는 대도시 위주로 선택을 했습니다.

------------------------

< 슬라이드 19 >

그러면 프로그램은 일자별로 이동 고속도로를 안내하고, 고속도로 동선상에 있는 주유소를 검색해
기름값, 그리고 넣어야 하는 기름의 양을 계산해서
여행 기간 동안 가장 저렴하게 기름값을 지불할 수 있는 주유소의 경로, 기름값, 기름의 양을 안내합니다.
마지막으로 여행 기간 동안에 가장 저렴한 기름값으로 총 얼마가 나왔고, 가장 비싼 기름값 혹은 평균적인 기름값과 비교해서 얼마나 차이 났는지를 보여줍니다.

------------------------

< 슬라이드 20 >

다음으로, Output의 기능을 구현하기 위해 각종 문제들을 어떻게 해결할지 말씀드리겠습니다.
(도시 입력 시, 이용해야 하는 고속도로 안내는 어떻게 할 지 고민중...)
먼저, 사용자가 도시 입력 시 이동하는 고속도로의 거리를 계산하기 위해 좌표를 사용할 예정입니다. 
각 Node에 좌표값을 부여해 도시 간의 거리와, 주유소 간의 거리를 계산할 수 있기 때문입니다.
그러면 이 거리값을 토대로, 이동에 따라 자동차에서 소모되는 기름의 양도 계산할 수 있습니다.
또한, 도시와 도시 사이에 있는 주유소를 따로 추출할 수 있습니다.
가령, 사용자가 서울에서 대전을 가겠다고 입력한다면 x좌표가 0과 8사이에 있는 주유소인 A, B, C 순서대로 추출하는 것입니다.
반대로 대전에서 서울을 가겠다고 입력한다면, x좌표가 똑같이 0과 8사이에 있는 주유소를 추출하지만 x좌표의 값이 큰 순서대로
즉, 내림차순대로 주유소가 C B A 이렇게 안내될 것입니다.

------------------------

< 슬라이드 21 >

다음으로, 현재의 기름양으로 갈 수 있는 최저가 주유소를 가기 위한 준비 코드를 보여드리겠습니다.
첫째날은 기름이 가득 찬 상태로 출발한다고 가정했고, 여행이 끝나는 시점에 남아 있어야 하는 기름의 양은 고려하지 않은 코드입니다.

------------------------

< 슬라이드 22 >

Q & A
네, 제가 준비한 발표는 여기까지고
질문 있으십니까?

------------------------

< 슬라이드 23 >

(그림 자료 및 출저)